#!/usr/bin/env python
from glob import glob
from pathlib import Path
import shutil
import subprocess

env = SConscript("godot-cpp/SConstruct")
env.Append(CPPDEFINES=['IMGUI_USER_CONFIG="\\"imconfig-godot.h\\""', "IGN_EXPORT"])
env.Append(CPPPATH=["src/", "imgui/", "include/", "gen/"])
env.Replace(CXXFLAGS=str(env["CXXFLAGS"]).replace("c++17", "c++20"))

windows = env["platform"] == "windows"
linux = env["platform"] == "linux"
config = "release" if env["target"] == "template_release" else "debug"

if config == "release":
    if windows:
        env.Append(CPPDEFINES=["NDEBUG"])

if windows:
    triplet = "x64-windows-static"
elif linux:
    triplet = "x64-linux"
else:
    subprocess.call("zsh vcpkg-macos.sh", shell=True)
    triplet = "arm64-osx"

subprocess.call("python gds_bindings.py", shell=True)

sources = Glob("src/*.cpp") + Glob("imgui/*.cpp") + Glob("gen/*.cpp")

shutil.copy("imgui-godot-native.gdextension", "../addons/imgui-godot/")
(extension_path,) = glob("../addons/imgui-godot/*.gdextension")
addon_path = Path(extension_path).parent
project_name = Path(extension_path).stem

libpath = env.get("LIBPATH", [])
libs = [env["LIBS"]]

env.Append(CPPPATH=["imgui/misc/freetype/"])
env.Append(CPPPATH=[f"vcpkg_installed/{triplet}/include"])
env.Append(CPPDEFINES=["IMGUI_ENABLE_FREETYPE"]) #, "IMGUI_ENABLE_FREETYPE_LUNASVG"])
sources += Glob("imgui/misc/freetype/*.cpp")
libpath += [f"vcpkg_installed/{triplet}/lib"]
libs += [
    "freetype",
#    "lunasvg",
    "bz2",
    "libpng16" if windows else "png16",
    "zlib" if windows else "z",
    "brotlidec",
    "brotlicommon",
]

if env["platform"] == "macos":
    library = env.SharedLibrary(
        "{0}/bin/lib{1}.{2}.{3}.framework/{1}.{2}.{3}".format(
            addon_path,
            project_name,
            env["platform"],
            config,
        ),
        source=sources,
        LIBPATH=libpath,
        LIBS=libs,
    )
else:
    library = env.SharedLibrary(
        "{}/bin/lib{}.{}.{}.{}{}".format(
            addon_path,
            project_name,
            env["platform"],
            config,
            env["arch"],
            env["SHLIBSUFFIX"],
        ),
        source=sources,
        LIBPATH=libpath,
        LIBS=libs,
    )

Default(library)
